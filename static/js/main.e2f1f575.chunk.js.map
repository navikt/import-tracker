{"version":3,"sources":["components/AccordionList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ImportTable","imports","defaultImports","useState","modalOpen","setModalOpen","modalFiles","setModalFiles","className","Object","keys","map","k","name","value","sort","a","b","uses","x","y","style","display","justifyContent","alignItems","Button","onClick","files","repos","Modal","open","onClose","split","Link","target","href","slice","join","AccordionList","imp","Accordion","heading","renderContentWhenClosed","defaultUses","namedUses","length","App","dataRoot","setDataRoot","useEffect","fetch","headers","Accept","then","data","json","parsed","key","filter","startsWith","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2f1f575.chunk.js","sourcesContent":["import { Accordion, Button, Link, Modal } from \"@navikt/ds-react\";\nimport React, { Fragment, useState } from \"react\";\nimport { packageUsesT } from \"../App\";\nimport \"../app.css\";\n\nconst ImportTable = ({\n  imports,\n  defaultImports,\n}: {\n  imports: { [key: string]: { uses: number; repos: string[] } };\n  defaultImports: number;\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalFiles, setModalFiles] = useState<string[]>([]);\n  const handleModal = (files: string[]) => {\n    setModalFiles(files);\n    setModalOpen(true);\n  };\n\n  return (\n    <>\n      <table className=\"tabell tabell--stripet\">\n        <thead>\n          <tr>\n            <th>Funksjon/klasse</th>\n            <th>Importert X ganger</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Default</td>\n            <td>{defaultImports}</td>\n          </tr>\n          {Object.keys(imports)\n            .map((k) => {\n              return { name: k, value: imports[k] };\n            })\n            .sort((a, b) => (a.value.uses < b.value.uses ? 1 : -1))\n            .map((x, y) => {\n              return (\n                <Fragment key={x.name + y}>\n                  {x.name === \"*\" ? (\n                    <tr>\n                      <td>import default as alias</td>\n                      <td>{x.value}</td>\n                    </tr>\n                  ) : (\n                    <tr>\n                      <td>{x.name}</td>\n                      <td\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        {x.value.uses}\n                        <Button onClick={() => handleModal(x.value.repos)}>\n                          Se filer\n                        </Button>\n                      </td>\n                    </tr>\n                  )}\n                </Fragment>\n              );\n            })}\n        </tbody>\n      </table>\n      <Modal open={modalOpen} onClose={() => setModalOpen(false)}>\n        {modalFiles.map((x) => {\n          const split = x.split(\"/\");\n\n          return (\n            <div key={x}>\n              <Link\n                target=\"_blank\"\n                href={`https://github.com/navikt/${\n                  split[0]\n                }/blob/master/${split.slice(1).join(\"/\")}`}\n              >\n                {x}\n              </Link>\n            </div>\n          );\n        })}\n      </Modal>\n    </>\n  );\n};\n\nconst AccordionList = ({\n  imp,\n}: {\n  imp: {\n    name: string;\n    value: packageUsesT;\n  };\n}) => {\n  return (\n    <Accordion\n      className=\"accordion filter drop-shadow-lg\"\n      heading={\n        <span style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <span>{imp.name}</span>\n          <span>{imp.value.uses}</span>\n        </span>\n      }\n      key={imp.name}\n      renderContentWhenClosed={false}\n    >\n      <div className=\"max-h-80 overflow-auto\">\n        {imp.value.defaultUses > 0 &&\n          Object.keys(imp.value.namedUses).length === 0 && (\n            <span>\n              Importeres antageligvis i formatene <br /> <br />\n              <code>{`const Package = require(\"${imp.name}\");`}</code>\n              <br />\n              <br />\n              <code>{`import \"${imp.name}\";`}</code>\n            </span>\n          )}\n\n        {Object.keys(imp.value.namedUses).length > 0 && (\n          <ImportTable\n            key={imp.name + imp.name}\n            imports={imp.value.namedUses}\n            defaultImports={imp.value.defaultUses}\n          />\n        )}\n      </div>\n    </Accordion>\n  );\n};\n\nexport default AccordionList;\n","import React, { useEffect, useState } from \"react\";\nimport \"./app.css\";\nimport \"nav-frontend-tabell-style\";\nimport AccordionList from \"./components/AccordionList\";\nimport { Element } from \"nav-frontend-typografi\";\n\nexport type packageUsesT = {\n  uses: number;\n  defaultUses: number;\n  namedUses: { [key: string]: { uses: number; repos: string[] } };\n};\n\nconst App = () => {\n  const [dataRoot, setDataRoot] = useState<any[]>([]);\n\n  useEffect(() => {\n    fetch(\"imports.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((data: Response) => data.json())\n      .then((data: any) => {\n        const parsed = Object.keys(data)\n          .map((key) => {\n            return { name: key, value: data[key] as packageUsesT };\n          })\n          .sort((x, y) => (x.value.uses < y.value.uses ? 1 : -1));\n        setDataRoot(parsed.filter((x) => x.name.startsWith(\"@navikt/ds-\")));\n      });\n  }, []);\n\n  return (\n    <div className=\"flex justify-center vw-100 typo-normal overflow-x-hidden\">\n      <div className=\"p-8 max-w-screen-md w-full\">\n        <span className=\"flex justify-between p-4 \">\n          <Element>Pakkenavn</Element>\n          <Element className=\"mx-4\">Imports</Element>\n        </span>\n        {dataRoot.map((imp, y) => (\n          <AccordionList key={imp.name} imp={imp} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@navikt/ds-css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}